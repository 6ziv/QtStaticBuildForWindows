name: static-qt-for-windows
on: [push]
jobs:
  read-versions:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: pwsh
    outputs:
      zlib-version: ${{ steps.read-zlib-version.outputs.version }}
      openssl-version: ${{ steps.read-openssl-version.outputs.version }}
      qt-version-major: ${{ steps.read-qt-version-major.outputs.version }}
      qt-version-minor: ${{ steps.read-qt-version-minor.outputs.version }}
    steps:
      - uses: actions/checkout@v2
        with: 
          path: project
      - id: read-zlib-json
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./project/versions.json
          property: zlib-version
      - id: read-zlib-version
        run: echo "::set-output name=version::${{ steps.read-zlib-json.outputs.value }}"
      - id: read-openssl-json
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./project/versions.json
          property: openssl-version
      - id: read-openssl-version
        run: echo "::set-output name=version::${{ steps.read-openssl-json.outputs.value }}"
      - id: read-qt-json-major
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./project/versions.json
          property: qt-version-major
      - id: read-qt-major-version
        run: echo "::set-output name=version::${{ steps.read-qt-json-major.outputs.value }}"
      - id: read-qt-json-minor
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./project/versions.json
          property: qt-version-minor
      - id: read-qt-minor-version
        run: echo "::set-output name=version::${{ steps.read-qt-json-minor.outputs.value }}"
  build-qt-x86:
    needs: read-versions
    uses: 6ziv/QtStaticBuildForWindows/.github/workflows/build-qt-workflow.yml@main
    with: 
      zlib-version: ${{ needs.read-versions.outputs.zlib-version }}
      openssl-version: ${{ needs.read-versions.outputs.openssl-version }}
      qt-version-major: ${{ needs.read-versions.outputs.qt-version-major }}
      qt-version-minor: ${{ needs.read-versions.outputs.qt-version-minor }}
      arch: 'x86'
  build-qt-x64:
    needs: read-versions
    uses: 6ziv/QtStaticBuildForWindows/.github/workflows/build-qt-workflow.yml@main
    with: 
      zlib-version: ${{ needs.read-versions.outputs.zlib-version }}
      openssl-version: ${{ needs.read-versions.outputs.openssl-version }}
      qt-version: ${{ needs.read-versions.outputs.qt-version }}
      arch: 'x64'
  upload-release-x86:
    needs: build-qt-x86
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/download-artifact@v2
        with: 
          name: qt-x86
          path: ${{ runner.temp }}/qt
      - run: 7z a ${{ runner.temp }}/qt-${{ steps.read-qt-version.outputs.version }}-x86.zip ${{ runner.temp }}/qt -v2g
      - uses: softprops/action-gh-release@v1
        with:
          name: Qt-${{ steps.read-qt-version.outputs.version }}(x86)
          file: ${{ runner.temp }}/qt-${{ steps.read-qt-version.outputs.version }}-x86.z*
  upload-release-x64:
    needs: build-qt-x64
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/download-artifact@v2
        with: 
          name: qt-x64
          path: ${{ runner.temp }}/qt
      - run: 7z a ${{ runner.temp }}/qt-${{ steps.read-qt-version.outputs.version }}-x64.zip ${{ runner.temp }}/qt -v2g
      - uses: softprops/action-gh-release@v1
        with:
          name: Qt-${{ steps.read-qt-version.outputs.version }}(x64)
          file: ${{ runner.temp }}/qt-${{ steps.read-qt-version.outputs.version }}-x64.z*